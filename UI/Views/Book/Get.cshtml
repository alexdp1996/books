@model BookVM

<div id="popup-alert-box"></div>
@using (Html.BeginForm("Save", "Book"))
{
    <div class="form-horizontal">
        <div class="modal-header">
            <h5 class="modal-title">@(Model == null ? "Create Book" : "Edit Book")</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Pages, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Pages, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pages, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Authors, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="AuthorIds" style="width: 100%;" name="AuthorIds">
                        @if (Model != null)
                        {
                            foreach (var o in Model.Authors)
                            {
                                <option selected="selected" value="@o.Id">@(o.Name + " " + o.Surname)</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <input type="submit" value="Save" class="btn btn-default" />
            <button class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")
@Styles.Render("~/book/css")
@Scripts.Render("~/bundles/crud")
@Scripts.Render("~/bundles/book")
<script>
    $(document).ready(function () {
        let authorsByTermUrl = "@Url.Action("GetByTerm","Author")";
        let saveUrl = "@Url.Action("Save")";
        let controller = new BookController({ save: saveUrl, authors: authorsByTermUrl });
        controller.initPlugins();
        controller.bindSave();
    });
</script>

